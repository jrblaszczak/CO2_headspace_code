setwd("~/GitHub/CO2_headspace_code/Code")
library(dplyr)
source("Koschorreck et al. hs_equil_correction.R")
list.files()
source("Koschorreck et al. hs_equil_correction.R")
source("Koschorreck_Rheadspace.R")
source("Koschorreck_Rheadspace.R")
library(dplyr)
source("Koschorreck_Rheadspace.R")
## Import data and format again
setwd("../Data")
dat <- read.csv("2020_10_02_HScorrection_allformatted.csv")
dat <- dat[,-c(1)]
sapply(dat,class)
dat <- dat %>% mutate_if(is.integer,as.numeric)
## for now get rid of any NAs -- some alkalinity measurements missing because of titration error
dat <- na.omit(dat)
## Run code
pCO2 <- Rheadspace(dat)
setwd("~/GitHub/CO2_headspace_code/Code")
## Load packages
lapply(c("plyr","dplyr","ggplot2","cowplot",
"lubridate","tidyverse", "readxl"), require, character.only=T)
## Reset wd
setwd("../Data")
################
## Import Data
################
## Import QAQC'd headspace equilibration data
dat <- ldply(list.files(pattern = "*_QAQC.csv"), function(filename) {
d <- read.csv(filename)
d$file <- filename
return(d)
})
names(dat)
# subset to relevant columns
hs <- dat[,c("SampleID","CO2","WaterTemp_C","H2O_mL","air_mL","Baro_inHg")]
# import alkalinity and pH data
A_pH <- read.csv("Diel_pH_Alk_mean_reps.csv", header=T) ## mean of triplicate values for Oak
# merge with iso data
hs <- left_join(hs, A_pH, by="SampleID")
## Separate SampleID to create DateTime
sapply(hs, class)
#create a second sample ID to save
hs$Sample.ID <- hs$SampleID
#convert sample ID into site, date, time
hs$SampleID <- as.character(hs$SampleID)
hs <- hs %>%
separate(SampleID, c("Site","Date","Time"))
hs$Date <- revalue(hs$Date, c("822" = "2018-08-22","823"="2018-08-23","830" = "2018-08-30","831"="2018-08-31",
"926" = "2018-09-26","927"="2018-09-27","928"="2018-09-28"))
hs$Time <- as.numeric(hs$Time)
hs$Time <- ifelse(hs$Time < 1000, yes= paste(substring(hs$Time, 1, 1), substring(hs$Time, 2, 3), sep = ":"),
no = ifelse(hs$Time >= 1000, yes=paste(substring(hs$Time, 1, 2), substring(hs$Time, 3, 4), sep = ":"), no=NA))
hs$Time <- revalue(hs$Time, c("0:"="0:00"))
hs$DateTime <- lubridate::ymd_hm(paste(hs$Date,hs$Time))
hs$DateTime <- as.POSIXct(as.character(hs$DateTime), format="%Y-%m-%d %H:%M:%S",tz = "UTC")
hs <- hs[order(hs$Site, hs$Date, hs$Time),]
names(hs)
# create each column if does not already exist
# hs$Sample.ID already exists
hs$HS.pCO2.before <- 0
hs$HS.pCO2.after <- hs$CO2 ## check if units correct
hs$Temp.insitu <- hs$WaterTemp_C
hs$Temp.equil <- hs$WaterTemp_C ## assuming the temperature is the same
View(hs)
1440/144
hs$Alkalinity.measured <- (hs$Alk_mgLCaCO3*1000)/(50.04345*2)
View(hs)
hs$Alkalinity.measured <- (hs$Alk_mgLCaCO3*1000)/(50*2)
View(hs)
hs$Volume.gas <- hs$air_mL
hs$Volume.water <- hs$H2O_mL
hs$Constants <- 1
hs$Bar.pressure <- hs$Baro_inHg*3.38639
hs$Salinity <- 0
## Final df
df <- hs[,c("Sample.ID","HS.pCO2.before","HS.pCO2.after",
"Temp.insitu","Temp.equil","Alkalinity.measured",
"Volume.gas","Volume.water","Bar.pressure",
"Constants","Salinity")]
## Export
write.csv(df,"2020_10_02_HScorrection_allformatted.csv")
write.csv(hs,"2020_10_02_HScorrection_preformat.csv")
setwd("~/GitHub/CO2_headspace_code/Code")
library(dplyr)
source("Koschorreck_Rheadspace.R")
## Import data and format again
setwd("../Data")
dat <- read.csv("2020_10_02_HScorrection_allformatted.csv")
dat <- dat[,-c(1)]
sapply(dat,class)
dat <- dat %>% mutate_if(is.integer,as.numeric)
## for now get rid of any NAs -- some alkalinity measurements missing because of titration error
dat <- na.omit(dat)
## Run code
pCO2 <- Rheadspace(dat)
View(pCO2)
## Export
write.csv(pCO2, "2020_10_02 Koschorrek hs equil correction results.csv")
